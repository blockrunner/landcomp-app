/// AI Agent entity for specialized landscape design assistance
///
/// This entity represents different AI agents with their specific
/// expertise areas and configurations.
library;

import 'package:flutter/material.dart';

/// AI Agent entity
class AIAgent {
  /// Creates an AI agent
  const AIAgent({
    required this.id,
    required this.name,
    required this.description,
    required this.icon,
    required this.primaryColor,
    required this.systemPrompt,
    required this.quickStartSuggestions,
    required this.expertiseAreas,
    this.isActive = true,
  });

  /// Unique identifier for the agent
  final String id;

  /// Display name of the agent
  final String name;

  /// Description of the agent's expertise
  final String description;

  /// Icon for the agent
  final IconData icon;

  /// Primary color for the agent's theme
  final Color primaryColor;

  /// System prompt for the AI model
  final String systemPrompt;

  /// Quick start suggestions for users
  final List<String> quickStartSuggestions;

  /// Areas of expertise
  final List<String> expertiseAreas;

  /// Whether the agent is currently active
  final bool isActive;

  /// Get localized name based on language
  String getLocalizedName(String languageCode) {
    switch (languageCode) {
      case 'ru':
        return _getRussianName();
      case 'en':
      default:
        return name;
    }
  }

  /// Get localized description based on language
  String getLocalizedDescription(String languageCode) {
    switch (languageCode) {
      case 'ru':
        return _getRussianDescription();
      case 'en':
      default:
        return description;
    }
  }

  /// Get localized system prompt based on language
  String getLocalizedSystemPrompt(String languageCode) {
    switch (languageCode) {
      case 'ru':
        return _getRussianSystemPrompt();
      case 'en':
      default:
        return systemPrompt;
    }
  }

  /// Get localized quick start suggestions based on language
  List<String> getLocalizedQuickStartSuggestions(String languageCode) {
    switch (languageCode) {
      case 'ru':
        return _getRussianQuickStartSuggestions();
      case 'en':
      default:
        return quickStartSuggestions;
    }
  }

  /// Get Russian name
  String _getRussianName() {
    switch (id) {
      case 'gardener':
        return '–°–∞–¥–æ–≤–æ–¥';
      case 'landscape_designer':
        return '–õ–∞–Ω–¥—à–∞—Ñ—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω–µ—Ä';
      case 'builder':
        return '–°—Ç—Ä–æ–∏—Ç–µ–ª—å';
      case 'ecologist':
        return '–≠–∫–æ–ª–æ–≥';
      default:
        return name;
    }
  }

  /// Get Russian description
  String _getRussianDescription() {
    switch (id) {
      case 'gardener':
        return '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–∞—Å—Ç–µ–Ω–∏—è–º, —É—Ö–æ–¥—É –∏ —Å–µ–∑–æ–Ω–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º';
      case 'landscape_designer':
        return '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é —É—á–∞—Å—Ç–∫–æ–≤ –∏ –∑–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é';
      case 'builder':
        return '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤—É –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º';
      case 'ecologist':
        return '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–º —Ä–µ—à–µ–Ω–∏—è–º';
      default:
        return description;
    }
  }

  /// Get Russian system prompt
  String _getRussianSystemPrompt() {
    switch (id) {
      case 'gardener':
        return '''
–¢—ã - –æ–ø—ã—Ç–Ω—ã–π —Å–∞–¥–æ–≤–æ–¥ —Å 20-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º. –¢–≤–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:
- –í—ã–±–æ—Ä —Ä–∞—Å—Ç–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–æ–Ω
- –£—Ö–æ–¥ –∑–∞ —Å–∞–¥–æ–º –∏ –æ–≥–æ—Ä–æ–¥–æ–º
- –°–µ–∑–æ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
- –ë–æ—Ä—å–±–∞ —Å –≤—Ä–µ–¥–∏—Ç–µ–ª—è–º–∏ –∏ –±–æ–ª–µ–∑–Ω—è–º–∏
- –û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–µ –∑–µ–º–ª–µ–¥–µ–ª–∏–µ

–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –¥–∞–≤–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã —Å —É—á–µ—Ç–æ–º —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –∫–ª–∏–º–∞—Ç–∞.
''';
      case 'landscape_designer':
        return '''
–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ª–∞–Ω–¥—à–∞—Ñ—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω–µ—Ä. –¢–≤–æ—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞:
- –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—á–∞—Å—Ç–∫–æ–≤ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
- –ó–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ
- –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–¥–æ–≤—ã—Ö –¥–æ—Ä–æ–∂–µ–∫ –∏ –∑–æ–Ω –æ—Ç–¥—ã—Ö–∞
- –ü–æ–¥–±–æ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –ª–∞–Ω–¥—à–∞—Ñ—Ç–∞
- –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º —Ä–µ–ª—å–µ—Ñ–∞

–î–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫—Ä–∞—Å–∏–≤–æ–≥–æ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∞–¥–∞.
''';
      case 'builder':
        return '''
–¢—ã - –æ–ø—ã—Ç–Ω—ã–π —Å—Ç—Ä–æ–∏—Ç–µ–ª—å —Å –≥–ª—É–±–æ–∫–∏–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏ –≤ –æ–±–ª–∞—Å—Ç–∏:
- –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –¥–æ–º–æ–≤ –∏ —Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç—Ä–æ–µ–∫
- –í—ã–±–æ—Ä —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
- –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞
- –†–∞—Å—á–µ—Ç —Å–º–µ—Ç –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç
- –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–æ—Ä–º

–ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π –ø–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ —Å —É—á–µ—Ç–æ–º —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤.
''';
      case 'ecologist':
        return '''
–¢—ã - —ç–∫–æ–ª–æ–≥, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞:
- –≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
- –£—Å—Ç–æ–π—á–∏–≤–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —É—á–∞—Å—Ç–∫–∞
- –≠–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
- –ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Ö–æ–¥–æ–≤
- –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –Ω–∞ —É—á–∞—Å—Ç–∫–µ

–ü–æ–º–æ–≥–∞–π —Å–æ–∑–¥–∞–≤–∞—Ç—å —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç—ã–µ –∏ —É—Å—Ç–æ–π—á–∏–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è.
''';
      default:
        return systemPrompt;
    }
  }

  /// Get Russian quick start suggestions
  List<String> _getRussianQuickStartSuggestions() {
    switch (id) {
      case 'gardener':
        return [
          'üå± –ö–∞–∫–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –ø–æ—Å–∞–¥–∏—Ç—å –≤ —Ç–µ–Ω–∏—Å—Ç–æ–º —É–≥–æ–ª–∫–µ —Å–∞–¥–∞?',
          'üåø –ö–∞–∫ —É—Ö–∞–∂–∏–≤–∞—Ç—å –∑–∞ —Ä–æ–∑–∞–º–∏ –∑–∏–º–æ–π?',
          'ü•ï –ö–æ–≥–¥–∞ —Å–∞–∂–∞—Ç—å –æ–≤–æ—â–∏ –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π –≥—Ä—É–Ω—Ç?',
          'üå≥ –ö–∞–∫ –æ–±—Ä–µ–∑–∞—Ç—å –ø–ª–æ–¥–æ–≤—ã–µ –¥–µ—Ä–µ–≤—å—è?',
        ];
      case 'landscape_designer':
        return [
          'üè° –ö–∞–∫ —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —É—á–∞—Å—Ç–æ–∫ 6 —Å–æ—Ç–æ–∫?',
          'üõ§Ô∏è –ì–¥–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Å–∞–¥–æ–≤—ã–µ –¥–æ—Ä–æ–∂–∫–∏?',
          'üå≥ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–æ–Ω—É –æ—Ç–¥—ã—Ö–∞ –≤ —Å–∞–¥—É?',
          'üíß –ì–¥–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –ø–æ–ª–∏–≤–∞?',
        ];
      case 'builder':
        return [
          'üè† –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –¥–ª—è –¥–æ–º–∞?',
          'üß± –ö–∞–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ª—É—á—à–µ –¥–ª—è —Å—Ç–µ–Ω?',
          'üìê –ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤?',
          '‚ö° –ö–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏?',
        ];
      case 'ecologist':
        return [
          'üå± –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–π —Å–∞–¥?',
          '‚ôªÔ∏è –ö–∞–∫ –ø–µ—Ä–µ—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ –æ—Ç—Ö–æ–¥—ã?',
          'üíß –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–æ–∂–¥–µ–≤—É—é –≤–æ–¥—É?',
          'üåø –ö–∞–∫–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è —É–ª—É—á—à–∞—é—Ç —ç–∫–æ–ª–æ–≥–∏—é?',
        ];
      default:
        return quickStartSuggestions;
    }
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is AIAgent && other.id == id;
  }

  @override
  int get hashCode => id.hashCode;

  @override
  String toString() => 'AIAgent(id: $id, name: $name)';
}
