events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Mobile optimization headers
        add_header X-Mobile-Optimized "true" always;
        add_header Vary "User-Agent, Accept-Encoding" always;
        
        # Content Security Policy for Flutter Web
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.gstatic.com https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: blob:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' http://localhost:3001 https://api.openai.com https://generativelanguage.googleapis.com https://www.gstatic.com https://fonts.gstatic.com; worker-src 'self' blob:;" always;

        # Handle Flutter web routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Cache Flutter web assets
        location ~* \.(wasm|js\.gz|css\.gz)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Allow access to .env file
        location = /assets/.env {
            add_header Content-Type text/plain;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Proxy API requests to the proxy server
        location /proxy/ {
            proxy_pass http://landcomp-proxy:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header Accept-Language $http_accept_language;
            
            # Extended timeouts for mobile devices
            proxy_connect_timeout 30s;
            proxy_send_timeout 180s;
            proxy_read_timeout 180s;
            
            # Mobile device detection and optimization
            set $is_mobile 0;
            if ($http_user_agent ~* "(Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini)") {
                set $is_mobile 1;
            }
            
            # CORS headers with mobile support
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-Proxy-URL, X-Proxy-Host, X-Proxy-Port, X-Proxy-User, X-Proxy-Pass";
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Max-Age 86400;
            
            # Mobile-specific headers
            if ($is_mobile = 1) {
                add_header X-Mobile-Optimized "true";
                add_header X-Response-Time $request_time;
            }
            
            # Override CSP for proxy requests
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.gstatic.com https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: blob:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' http://localhost:3001 https://api.openai.com https://generativelanguage.googleapis.com https://www.gstatic.com https://fonts.gstatic.com; worker-src 'self' blob:;" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-Proxy-URL, X-Proxy-Host, X-Proxy-Port, X-Proxy-User, X-Proxy-Pass";
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
